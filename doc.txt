§1 Introduction

preliminary program interleaf.cpp

[Set up tree]
     	User input: treefile, min nr of leaves and gamma
[Select clades]
	Calc for clades with at least min nr of leaves mean of interleaf distances
[Calc grand median]
	Calc median of these means gm
[Calc mad]
	Calc mad for i such that mu(i) >= gm mad = median(mu(i)-gm)
[Filter]
	keep i with mu(i) <= gm +(gamma*mad)
[Get distributions]
	For all i calc D(i) = {interleaf distances for clade with mu(i)}

§2 Set up tree

means.cpp is used to develop the data structures

While calculating ild calc sum and count and store in selected ancestors
Then traverse the tree in any order (inorder) and store the means in a vector
consisting of (mean, node pointer), which can then be sorted. This is the output of
means.cpp

§3 Calc grand median

This is trivially the element at means.size()/2 (vector indices are 0-based)
or if this is even the average of 2 middle elements.
This is the ouput of gm.cpp.

§4 Calc mad

Since median(mu(i) - gm) = median(mu(i)) - gm where mu(i) >= gm
In extreme cases there are a lot of elements equal to the median
This (and gm) is the output of mad.cpp

§5 Filter

First we calculate upperbound = gm + gamma*mad
Then using the means vector we erase everything with a mean greater than upperbound
Output of filter.cpp

§6 Get distributions

We have the clades with their means in the vector means
we could turn the select value of all nodes off now
and then turn the nodes for all the nodes in means back on.
Then we could prune the tree.
see distrib.cpp
Question:
If we delete a clade is it guaranteed that we don't delete a valid subtree?
